#!/bin/bash

BRIGHTNESS_DEVICE="/sys/class/backlight/backlight-dsi"
MAX_BRIGHT=$(cat ${BRIGHTNESS_DEVICE}/max_brightness)
PROG=$(basename $0)


MIN_BRIGHT=50
MAX_DISPLAY_AT_LL=4000000
ADAPT_TO_USER=1

CONF_FILE="/etc/$PROG.conf"



if [[ "$1" != "-r" ]]; then
    monitor-sensor | $0 -r
    exit $?
fi


function get_brightness {
    OUTPUT=$(cat ${BRIGHTNESS_DEVICE}/brightness)
}

function set_brightness {
    local NEW_BRIGHT="$1"
    if [[ "$NEW_BRIGHT" -gt "$MAX_BRIGHT" ]]; then
        NEW_BRIGHT="$MAX_BRIGHT"
    fi
    if [[ "$NEW_BRIGHT" -lt "$MIN_BRIGHT" ]]; then
        NEW_BRIGHT="$MIN_BRIGHT"
    fi
    echo "$NEW_BRIGHT" > ${BRIGHTNESS_DEVICE}/brightness
}

function get_max_brightness {
    OUTPUT=$(cat ${BRIGHTNESS_DEVICE}/max_brightness)
}

function display_on {
    OUTPUT=$(cat ${BRIGHTNESS_DEVICE}/bl_power )
}

function manage_brigtness {
    local LIGHT_LEVEL="$1"
    display_on
    local DISPLAY_ON="$OUTPUT"

    get_brightness
    local CUR_BRIGHTNESS="$OUTPUT"
    
    if [[ -n "$LAST_BRIGHTNESS" && "$DISPLAY_ON" -eq 0 ]]; then
        if [[ "$CUR_BRIGHTNESS" -ne "$LAST_BRIGHTNESS" ]]; then
            refactor_brightness "$LAST_BRIGHTNESS" "$CUR_BRIGHTNESS" "$LAST_LL"
        fi
    fi

    local LL_PER_OF_MAX=$(( $LIGHT_LEVEL * 100 / $MAX_DISPLAY_AT_LL ))
    BRIGHT_MOD=$(( $MAX_BRIGHT - $MIN_BRIGHT ))

    SET_BRIGHT=$(( $LL_PER_OF_MAX * $BRIGHT_MOD / 100 + $MIN_BRIGHT ))
    if [[ "$SET_BRIGHT" -gt "$MAX_BRIGHT" ]]; then
        SET_BRIGHT="$MAX_BRIGHT"
    fi
    # If we're goint to set it to the same thing, may as well not set it at all
    if [[ "$CUR_BRIGHTNESS" -eq "$SET_BRIGHT" ]]; then
	return
    fi

    set_brightness "$SET_BRIGHT"

    # Check that this actually got set 
    get_brightness
    local CUR_BRIGHTNESS="$OUTPUT"
    if [[ "$CUR_BRIGHTNESS" -eq "$SET_BRIGHT" ]]; then
        LAST_BRIGHTNESS="$SET_BRIGHT"
        LAST_LL="$LIGHT_LEVEL"
        echo "Light Level changed to: $LIGHT_LEVEL"
        echo "Set Brightness to: $SET_BRIGHT"
    else
        echo "Failed to set brightness"
        LAST_BRIGHTNESS=""
        LAST_LL=""
    fi
    
}

function refactor_brightness {
    local OLD_BRIGHT="$1"
    local NEW_BRIGHT="$2"
    local LL="$3"

    if [[ "$ADAPT_TO_USER" -eq 0 ]]; then
        return
    fi

    # If difference is negligable, ignore it. (< 1%)
    local DIFF_PER=$(( ($NEW_BRIGHT - $OLD_BRIGHT) * 100 / $MAX_BRIGHT ))
    if [[ "$DIFF_PER" -eq "0" ]]; then
        return
    fi

    echo "Detected User change to brightness to: $NEW_BRIGHT at light level: $LL"
    if [[ $LL -eq 0 ]]; then
        MIN_BRIGHT="$NEW_BRIGHT"
        echo "Set min Brightness to: $NEW_BRIGHT"
    	write_config
        return
    fi
    
    MAX_DISPLAY_AT_LL=$(( $LL * 100 / ($NEW_BRIGHT * 100 / $MAX_BRIGHT ) ))
    echo "Set max display at LL to: $MAX_DISPLAY_AT_LL"
    write_config
}

function read_config {
    if [[ -z "$CONF_FILE" ]]; then
        echo "CONF_FILE not defined!"
	return
    fi
    if [[ ! -f "$CONF_FILE" ]]; then
        return
    fi
    source "$CONF_FILE"
}
function write_config {
    if [[ -z "$CONF_FILE" ]]; then
        echo "CONF_FILE not defined!"
	return
    fi
    sed -i "s/^MIN_BRIGHT=.*$/MIN_BRIGHT='$MIN_BRIGHT'/g" "$CONF_FILE"
    sed -i "s/^MAX_DISPLAY_AT_LL=.*$/MAX_DISPLAY_AT_LL='$MAX_DISPLAY_AT_LL'/g" "$CONF_FILE"
    sed -i "s/^ADAPT_TO_USER=.*$/ADAPT_TO_USER='$ADAPT_TO_USER'/g" "$CONF_FILE"
}

function main {
    read_config

    echo "MAX_BRIGHT: $MAX_BRIGHT"
    echo "MIN_BRIGHT: $MIN_BRIGHT"
    echo "MAX_DISPLAY_AT_LL: $MAX_DISPLAY_AT_LL"
    echo "ADAPT_TO_USER: $ADAPT_TO_USER"

    while IFS='$\n' read -r line; do
        case "$line" in
            *"Light changed:"*)
                LIGHT_LEVEL=$(echo "$line" | sed 's/[^0-9]//g' | sed 's/^0//g')
                manage_brigtness "$LIGHT_LEVEL"
            ;;
            "=== Has ambient light sensor"*)
                LIGHT_LEVEL=$(echo "$line" | sed 's/[^0-9]//g' | sed 's/^0//g')
                manage_brigtness "$LIGHT_LEVEL"
            ;;
        esac
    done
}
main

